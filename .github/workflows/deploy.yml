name: Deploy to Hostinger

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, intl, gd, xml, dom, json, fileinfo, curl
          coverage: none

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-progress --optimize-autoloader --no-scripts

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
          chmod 600 ~/.ssh/config

      - name: Deploy to Hostinger
        uses: easingthemes/ssh-deploy@main
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          ARGS: "-rltgoDzvO --delete"
          SOURCE: "/"
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
          REMOTE_PORT: ${{ secrets.REMOTE_PORT }}
          TARGET: ${{ secrets.REMOTE_TARGET }}
          EXCLUDE: "/.git/, /.github/, /var/cache/, /tests/, public/uploads/, .env.local"

      - name: Set production environment
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          port: ${{ secrets.REMOTE_PORT }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ${{ secrets.REMOTE_TARGET }}
            if [ ! -f .env.local ]; then
              echo 'APP_ENV=prod' > .env.local
              echo 'APP_DEBUG=0' >> .env.local
              echo "Created new .env.local file"
            else
              echo ".env.local file already exists, keeping it intact"
            fi

      - name: Post-deploy setup
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          port: ${{ secrets.REMOTE_PORT }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ${{ secrets.REMOTE_TARGET }}
            mkdir -p var/cache
            chmod -R 775 var
            php bin/console cache:clear --env=prod --no-debug --no-warmup
            php bin/console cache:warmup --env=prod
            php bin/console doctrine:migrations:migrate --no-interaction --env=prod
            php bin/console assets:install public --env=prod
            chmod -R 775 var/cache